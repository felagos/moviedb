name: moviedb

on:
  push:
    branches: [ master ]

jobs:
  install-dependencies:
    name: install-dependencies
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Cache node modules
        id: cacheDependencies
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Run install
        run: npm ci
  test-app:
    runs-on: ubuntu-latest
    name: test-app
    needs: install-dependencies
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 14
        uses: actions/setup-node@v1
        with:
          node-version: '14' 
      - name: Cache node modules
        id: cacheDependencies
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-: 
      - name: Run install
        if: steps.cacheDependencies.outputs.cache-hit != 'true'
        run: npm ci
      - name: Test app
        run: npm run test
        env:
          REACT_APP_API_KEY: ${{ secrets.REACT_APP_API_KEY }}
          REACT_APP_API_URL: ${{ secrets.REACT_APP_API_URL }}
  deploy-app:
    runs-on: ubuntu-latest
    needs: test-app
    name: deploy-app
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 14
        uses: actions/setup-node@v1
        with:
          node-version: '14'
      - name: Run install
        if: steps.cacheDependencies.outputs.cache-hit != 'true'
        run: npm ci
      - name: Run build
        run: CI=true && npm run build
        env:
          REACT_APP_API_KEY: ${{ secrets.REACT_APP_API_KEY }}
          REACT_APP_API_URL: ${{ secrets.REACT_APP_API_UR }}
      - name: copy file via ssh key
        uses: garygrossgarten/github-action-scp@release
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          privateKey: ${{ secrets.KEY }}
          port: ${{ secrets.PORT }}
          rmRemote: true
          recursive: true
          local: "./build"
          remote: ${{ secrets.FOLDER_DESTINATION }}
          concurrency: 10
